<?xml version="1.0" encoding="UTF-8"?>
<OmniDataTransform xmlns="http://soap.sforce.com/2006/04/metadata">
    <active>true</active>
    <assignmentRulesUsed>false</assignmentRulesUsed>
    <deletedOnSuccess>false</deletedOnSuccess>
    <errorIgnored>false</errorIgnored>
    <fieldLevelSecurityEnabled>false</fieldLevelSecurityEnabled>
    <inputType>JSON</inputType>
    <name>DRLUpdatePolicyWithNewAmountToCollect</name>
    <nullInputsIncludedInOutput>false</nullInputsIncludedInOutput>
    <omniDataTransformItem>
        <defaultValue>Treated</defaultValue>
        <disabled>false</disabled>
        <filterGroup>0.0</filterGroup>
        <globalKey>DRLUpdatePolicyWithNewAmountToCollectCustom8256</globalKey>
        <inputObjectQuerySequence>0.0</inputObjectQuerySequence>
        <linkedObjectSequence>0.0</linkedObjectSequence>
        <name>DRLUpdatePolicyWithNewAmountToCollect</name>
        <outputCreationSequence>2.0</outputCreationSequence>
        <outputFieldName>Treatment_Status__c</outputFieldName>
        <outputObjectName>SFI_Custom_Sponsor_flux_Incoming__c</outputObjectName>
        <requiredForUpsert>false</requiredForUpsert>
        <upsertKey>false</upsertKey>
    </omniDataTransformItem>
    <omniDataTransformItem>
        <disabled>true</disabled>
        <filterGroup>0.0</filterGroup>
        <filterOperator>=</filterOperator>
        <globalKey>DRLUpdatePolicyWithNewAmountToCollectCustom7050</globalKey>
        <inputObjectQuerySequence>0.0</inputObjectQuerySequence>
        <linkedObjectSequence>0.0</linkedObjectSequence>
        <migrationValue>FAKEMAPPING</migrationValue>
        <name>DRLUpdatePolicyWithNewAmountToCollect</name>
        <outputCreationSequence>2.0</outputCreationSequence>
        <outputFieldName>Id</outputFieldName>
        <outputObjectName>SFI_Custom_Sponsor_flux_Incoming__c</outputObjectName>
        <requiredForUpsert>false</requiredForUpsert>
        <upsertKey>false</upsertKey>
    </omniDataTransformItem>
    <omniDataTransformItem>
        <disabled>false</disabled>
        <filterGroup>0.0</filterGroup>
        <globalKey>DRLUpdatePolicyWithNewAmountToCollectCustom5972</globalKey>
        <inputFieldName>InsurancePolicy:SponsorRejectionId</inputFieldName>
        <inputObjectQuerySequence>0.0</inputObjectQuerySequence>
        <linkedObjectSequence>0.0</linkedObjectSequence>
        <name>DRLUpdatePolicyWithNewAmountToCollect</name>
        <outputCreationSequence>2.0</outputCreationSequence>
        <outputFieldName>Id</outputFieldName>
        <outputObjectName>SFI_Custom_Sponsor_flux_Incoming__c</outputObjectName>
        <requiredForUpsert>true</requiredForUpsert>
        <upsertKey>true</upsertKey>
    </omniDataTransformItem>
    <omniDataTransformItem>
        <disabled>false</disabled>
        <filterGroup>0.0</filterGroup>
        <formulaConverted>| | var:InsurancePolicy:Transaction:Id ISBLANK var:InsurancePolicy:AmountToCollect var:InsurancePolicy:AmountToCollect var:InsurancePolicy:TotalAmount - IF</formulaConverted>
        <formulaExpression>IF(ISBLANK(InsurancePolicy:Transaction:Id), InsurancePolicy:AmountToCollect,InsurancePolicy:AmountToCollect - InsurancePolicy:TotalAmount)</formulaExpression>
        <formulaResultPath>InsurancePolicy:NewAmountToCollect</formulaResultPath>
        <formulaSequence>1.0</formulaSequence>
        <globalKey>DRLUpdatePolicyWithNewAmountToCollectCustom8158</globalKey>
        <inputObjectQuerySequence>0.0</inputObjectQuerySequence>
        <linkedObjectSequence>0.0</linkedObjectSequence>
        <name>DRLUpdatePolicyWithNewAmountToCollect</name>
        <outputCreationSequence>0.0</outputCreationSequence>
        <outputFieldName>Formula</outputFieldName>
        <outputObjectName>Formula</outputObjectName>
        <requiredForUpsert>false</requiredForUpsert>
        <upsertKey>false</upsertKey>
    </omniDataTransformItem>
    <omniDataTransformItem>
        <disabled>false</disabled>
        <filterGroup>0.0</filterGroup>
        <formulaConverted>| var:HasParent &quot;False&quot; == var:InsurancePolicy:PaidToDate | &quot;CustomFunctionImplementation&quot; &quot;CalculateNewPaidToDate&quot; | var:InsurancePolicy:Transaction LIST var:InsurancePolicy:PaidToDate FUNCTION IF</formulaConverted>
        <formulaExpression>IF(HasParent == &quot;False&quot;, InsurancePolicy:PaidToDate,FUNCTION(&quot;CustomFunctionImplementation&quot;,&quot;CalculateNewPaidToDate&quot;, LIST(InsurancePolicy:Transaction),InsurancePolicy:PaidToDate))</formulaExpression>
        <formulaResultPath>InsurancePolicy:NewPaidTodate</formulaResultPath>
        <formulaSequence>2.0</formulaSequence>
        <globalKey>DRLUpdatePolicyWithNewAmountToCollectCustom228</globalKey>
        <inputObjectQuerySequence>0.0</inputObjectQuerySequence>
        <linkedObjectSequence>0.0</linkedObjectSequence>
        <name>DRLUpdatePolicyWithNewAmountToCollect</name>
        <outputCreationSequence>0.0</outputCreationSequence>
        <outputFieldName>Formula</outputFieldName>
        <outputObjectName>Formula</outputObjectName>
        <requiredForUpsert>false</requiredForUpsert>
        <upsertKey>false</upsertKey>
    </omniDataTransformItem>
    <omniDataTransformItem>
        <disabled>true</disabled>
        <filterGroup>0.0</filterGroup>
        <formulaConverted>| &quot;CustomFunctionImplementation&quot; &quot;CalculateNewPaidToDate&quot; | var:TransactionsToReject:PaymentTransactionNotCanceledParent|1:ParentCharges LIST var:TransactionsToReject|1:LatestInsurancePolicy_PaidToDate FUNCTION</formulaConverted>
        <formulaExpression>FUNCTION(&quot;CustomFunctionImplementation&quot;,&quot;CalculateNewPaidToDate&quot;, LIST(TransactionsToReject:PaymentTransactionNotCanceledParent|1:ParentCharges), TransactionsToReject|1:LatestInsurancePolicy_PaidToDate)</formulaExpression>
        <formulaSequence>3.0</formulaSequence>
        <globalKey>DRLUpdatePolicyWithNewAmountToCollectCustom3469</globalKey>
        <inputObjectQuerySequence>0.0</inputObjectQuerySequence>
        <linkedObjectSequence>0.0</linkedObjectSequence>
        <name>DRLUpdatePolicyWithNewAmountToCollect</name>
        <outputCreationSequence>0.0</outputCreationSequence>
        <outputFieldName>Formula</outputFieldName>
        <outputObjectName>Formula</outputObjectName>
        <requiredForUpsert>false</requiredForUpsert>
        <upsertKey>false</upsertKey>
    </omniDataTransformItem>
    <omniDataTransformItem>
        <disabled>false</disabled>
        <filterGroup>0.0</filterGroup>
        <globalKey>DRLUpdatePolicyWithNewAmountToCollectCustom2121</globalKey>
        <inputFieldName>InsurancePolicy:NewPaidTodate</inputFieldName>
        <inputObjectQuerySequence>0.0</inputObjectQuerySequence>
        <linkedObjectSequence>0.0</linkedObjectSequence>
        <name>DRLUpdatePolicyWithNewAmountToCollect</name>
        <outputCreationSequence>1.0</outputCreationSequence>
        <outputFieldName>PaidToDate</outputFieldName>
        <outputObjectName>InsurancePolicy</outputObjectName>
        <requiredForUpsert>false</requiredForUpsert>
        <upsertKey>false</upsertKey>
    </omniDataTransformItem>
    <omniDataTransformItem>
        <disabled>true</disabled>
        <filterGroup>0.0</filterGroup>
        <filterOperator>=</filterOperator>
        <globalKey>DRLUpdatePolicyWithNewAmountToCollectCustom667</globalKey>
        <inputObjectQuerySequence>0.0</inputObjectQuerySequence>
        <linkedObjectSequence>0.0</linkedObjectSequence>
        <migrationValue>FAKEMAPPING</migrationValue>
        <name>DRLUpdatePolicyWithNewAmountToCollect</name>
        <outputCreationSequence>1.0</outputCreationSequence>
        <outputFieldName>Id</outputFieldName>
        <outputObjectName>InsurancePolicy</outputObjectName>
        <requiredForUpsert>false</requiredForUpsert>
        <upsertKey>false</upsertKey>
    </omniDataTransformItem>
    <omniDataTransformItem>
        <disabled>false</disabled>
        <filterGroup>0.0</filterGroup>
        <globalKey>DRLUpdatePolicyWithNewAmountToCollectCustom4492</globalKey>
        <inputFieldName>InsurancePolicy:Id</inputFieldName>
        <inputObjectQuerySequence>0.0</inputObjectQuerySequence>
        <linkedObjectSequence>0.0</linkedObjectSequence>
        <name>DRLUpdatePolicyWithNewAmountToCollect</name>
        <outputCreationSequence>1.0</outputCreationSequence>
        <outputFieldName>Id</outputFieldName>
        <outputObjectName>InsurancePolicy</outputObjectName>
        <requiredForUpsert>true</requiredForUpsert>
        <upsertKey>true</upsertKey>
    </omniDataTransformItem>
    <omniDataTransformItem>
        <disabled>false</disabled>
        <filterGroup>0.0</filterGroup>
        <globalKey>DRLUpdatePolicyWithNewAmountToCollectCustom6041</globalKey>
        <inputFieldName>InsurancePolicy:NewAmountToCollect</inputFieldName>
        <inputObjectQuerySequence>0.0</inputObjectQuerySequence>
        <linkedObjectSequence>0.0</linkedObjectSequence>
        <name>DRLUpdatePolicyWithNewAmountToCollect</name>
        <outputCreationSequence>1.0</outputCreationSequence>
        <outputFieldName>AmountToCollect__c</outputFieldName>
        <outputObjectName>InsurancePolicy</outputObjectName>
        <requiredForUpsert>false</requiredForUpsert>
        <upsertKey>false</upsertKey>
    </omniDataTransformItem>
    <outputType>SObject</outputType>
    <previewJsonData>{
  &quot;HasParent&quot; : &quot;True&quot;,
  &quot;InsurancePolicy&quot; : {
    &quot;AmountToCollect&quot; : -603.68,
    &quot;HasNotCharge&quot; : false,
    &quot;Id&quot; : &quot;0YT1w0000007rgXGAQ&quot;,
    &quot;Name&quot; : &quot;GFO000458&quot;,
    &quot;PaidToDate&quot; : &quot;2023-07-30&quot;,
    &quot;SponsorRejectionId&quot; : &quot;aA51x000000DLs7CAG&quot;,
    &quot;SponsorResiliationDate&quot; : &quot;2022-06-15&quot;,
    &quot;TotalAmount&quot; : 87.96,
    &quot;Transaction&quot; : {
      &quot;CancellationReason&quot; : &quot;Test&quot;,
      &quot;EffectiveDate&quot; : &quot;2023-04-29&quot;,
      &quot;EndDate&quot; : &quot;2023-05-30&quot;,
      &quot;Id&quot; : &quot;0k91w000000CjJtAAK&quot;,
      &quot;InsurancePolicyId&quot; : &quot;0YT1w0000007rgXGAQ&quot;,
      &quot;Name&quot; : &quot;Prime du 2023-04-30 au 2023-05-30&quot;,
      &quot;ParentTransactionId&quot; : &quot;0k91w000000CjJyAAK&quot;,
      &quot;ParentTransaction_Type&quot; : &quot;Premium Payment&quot;,
      &quot;Period_End_Date__c&quot; : &quot;2023-05-30&quot;,
      &quot;RejectionCode&quot; : &quot;AC10&quot;,
      &quot;SponsorRejection_Libele&quot; : &quot;GFO000458 AC10&quot;,
      &quot;TotalTransactionAmount&quot; : 29.32,
      &quot;TransactionAmount&quot; : 29.21312,
      &quot;TransactionEffectiveDate&quot; : &quot;2023-04-29T22:00:00.000Z&quot;,
      &quot;TransactionTaxAmount&quot; : 0.111112,
      &quot;Type&quot; : &quot;Premium Charge&quot;,
      &quot;hasParent&quot; : true
    }
  }
}</previewJsonData>
    <processSuperBulk>false</processSuperBulk>
    <responseCacheTtlMinutes>0.0</responseCacheTtlMinutes>
    <rollbackOnError>false</rollbackOnError>
    <sourceObject>json</sourceObject>
    <sourceObjectDefault>false</sourceObjectDefault>
    <synchronousProcessThreshold>0.0</synchronousProcessThreshold>
    <type>Load</type>
    <uniqueName>DRLUpdatePolicyWithNewAmountToCollect_1</uniqueName>
    <versionNumber>1.0</versionNumber>
    <xmlDeclarationRemoved>false</xmlDeclarationRemoved>
</OmniDataTransform>
